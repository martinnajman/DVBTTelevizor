<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="DVBTTelevizor.SettingsPage"
             Title="Settings">

    <ContentPage.Resources>
        <ResourceDictionary>

            <Style x:Key="LabelStyle" TargetType="Label">
                <!--Setter Property="TextColor" Value="#41b3ff"/-->
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="HorizontalTextAlignment" Value="Left"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
            </Style>

            <Style x:Key="CaptionStyle" TargetType="Label">
                <Setter Property="TextColor" Value="Yellow"/>
            </Style>

            <Style x:Key="ButtonStyle" TargetType="Label">
                <Setter Property="Margin" Value="20,0,0,0"/>
            </Style>

            <Style x:Key="CommonPickerTextStyle" TargetType="Picker">
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="BackgroundColor" Value="Black"/>
            </Style>

            <Style x:Key="CommonSwitchTextStyle" TargetType="Switch">
                <Setter Property="HorizontalOptions" Value="End"/>
            </Style>

        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>

        <ScrollView>

                <StackLayout Margin="10,20,10,20">

                    <Label Text="Channels list" Style="{DynamicResource CaptionStyle}"/>

                    <Grid Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70*" />
                            <ColumnDefinition Width="30*" />
                        </Grid.ColumnDefinitions>

                        <Label  Grid.Row="0" Grid.Column="0" Text="Show TV channels" Style="{DynamicResource LabelStyle}" />
                        <Switch Grid.Row="0" Grid.Column="1" x:Name="ShowTVSwitch" IsToggled="{Binding Config.ShowTVChannels, Mode=TwoWay}"/>

                        <Label  Grid.Row="1" Grid.Column="0" Text="Show radio channels" Style="{DynamicResource LabelStyle}" />
                        <Switch Grid.Row="1" Grid.Column="1" x:Name="ShowRadioSwitch" IsToggled="{Binding Config.ShowRadioChannels, Mode=TwoWay}"/>
                    </Grid>

                    <Button Text="Clear" Command="{Binding ClearChannelsCommand}" Style="{DynamicResource ButtonStyle}" />
                    <Button Text="Export" Command="{Binding ExportChannelsCommand}" Style="{DynamicResource ButtonStyle}" />
                    <Button Text="Import" Command="{Binding ImportChannelsCommand}" Style="{DynamicResource ButtonStyle}" />



                    <Label Text="System settings" Style="{DynamicResource CaptionStyle}"/>

                    <Grid Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70*" />
                            <ColumnDefinition Width="30*" />
                        </Grid.ColumnDefinitions>

                        <Label  Grid.Row="0" Grid.Column="0" Text="Show service menu" Style="{DynamicResource LabelStyle}" />
                        <Switch Grid.Row="0" Grid.Column="1" x:Name="ShowServiceMenuSwitch" IsToggled="{Binding Config.ShowServiceMenu, Mode=TwoWay}"/>

                        <Label  Grid.Row="1" Grid.Column="0" Text="Disable tuner init after start" Style="{DynamicResource LabelStyle}" />
                        <Switch Grid.Row="1" Grid.Column="1" x:Name="DoNotAutoInitAfterStartSwitch" IsToggled="{Binding Config.DoNotAutoInitAfterStart, Mode=TwoWay}"/>

                    </Grid>



                <StackLayout Margin="20,10,0,0">
                    <Label  Text="Font size:" x:Name="FontSizeLabel" Style="{StaticResource CaptionStyle}" FontSize="{Binding FontSizeForCaption}" />
                    <Picker
                            x:Name="FontSizePicker"
                            Margin="20,0,0,0"
                            FontSize="{Binding FontSizeForPicker}"
                            Style="{StaticResource CommonPickerTextStyle}"
                            SelectedIndex="{Binding AppFontSizeIndex, Mode=TwoWay}" >
                        <Picker.Items>
                            <x:String>Normal</x:String>
                            <x:String>Above normal</x:String>
                            <x:String>Big</x:String>
                            <x:String>Bigger</x:String>
                            <x:String>Very big</x:String>
                            <x:String>Huge</x:String>
                        </Picker.Items>
                    </Picker>
                </StackLayout>

                <Grid Margin="20,10,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70*" />
                        <ColumnDefinition Width="30*" />
                    </Grid.ColumnDefinitions>

                    <Label  Grid.Row="0" Grid.Column="0" Text="Full screen" Style="{StaticResource LabelStyle}" FontSize="{Binding FontSizeForCaption}"/>
                    <Switch Grid.Row="0" Grid.Column="1" x:Name="FullscreenSwitch" IsToggled="{Binding IsFullScreen, Mode=TwoWay}" Style="{StaticResource CommonSwitchTextStyle}" />

                    <Label  Grid.Row="1" Grid.Column="0" Text="Play on background" Style="{StaticResource LabelStyle}" FontSize="{Binding FontSizeForCaption}"/>
                    <Switch Grid.Row="1" Grid.Column="1" x:Name="PlayOnBackgroundSwitch" IsToggled="{Binding Config.PlayOnBackground, Mode=TwoWay}" Style="{StaticResource CommonSwitchTextStyle}" />

                </Grid>




                <Label Text="Logging" Style="{DynamicResource CaptionStyle}"/>

                    <Grid Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70*" />
                            <ColumnDefinition Width="30*" />
                        </Grid.ColumnDefinitions>

                        <Label  Grid.Row="0" Grid.Column="0" Text="Enable logging" Style="{DynamicResource LabelStyle}" />
                        <Switch Grid.Row="0" Grid.Column="1" x:Name="EnableLoggingSwitch" IsToggled="{Binding EnableLogging, Mode=TwoWay}" />

                    </Grid>

                    <Button Text="Share log file" IsVisible="{Binding EnableLogging}" Command="{Binding ShareLogCommand}" Style="{DynamicResource ButtonStyle}" />


                </StackLayout>

        </ScrollView>


    </ContentPage.Content>
</ContentPage>